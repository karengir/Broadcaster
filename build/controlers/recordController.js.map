{"version":3,"sources":["../../server/controlers/recordController.js"],"names":["recordController","req","res","userId","user","id","record","records","length","createdOn","format","createdBy","title","body","type","comment","location","status","push","json","message","data","parseInt","params","redflagid","flag","find","rec","splice","indexOf","error","i","findIndex","el"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport records from \"../models/record\";\r\n\r\nclass recordController {\r\n  static AddRecord(req, res) {\r\n    const userId = req.user.id;\r\n    const record = {\r\n      id: records.length + 1,\r\n      createdOn: moment().format(\"MMMM Do YYYY, h:mm:ss a\"),\r\n      createdBy: userId,\r\n      title: req.body.title,\r\n      type: req.body.type,\r\n      comment: req.body.comment,\r\n      location: req.body.location,\r\n      status: req.body.status\r\n      // images : req.image.images,\r\n      // videos : req.body.videos,\r\n    };\r\n\r\n    records.push(record);\r\n    res.status(201).json({\r\n      status: 201,\r\n      message: \"record created successfully\",\r\n      data: {\r\n        id: record.id,\r\n        createdBy: record.createdBy\r\n      }\r\n    });\r\n  }\r\n\r\n  static allRedflags(req, res) {\r\n    res.status(200).json({\r\n      status: 200,\r\n      data: records\r\n    });\r\n  }\r\n\r\n  static getSingleRedflag(req, res) {\r\n    const id = parseInt(req.params.redflagid);\r\n    const flag = records.find(rec => rec.id === id);\r\n\r\n    if (flag) {\r\n      res.status(200).json({\r\n        status: 200,\r\n        data: flag\r\n      });\r\n    }\r\n    return res.status(404).json({\r\n      status: 404,\r\n      message: \"Record not found\"\r\n    });\r\n  }\r\n\r\n  static deleteRedflags(req, res) {\r\n    const id = parseInt(req.params.redflagid, 10);\r\n    const flag = records.find(rec => rec.id === id);\r\n\r\n    if (flag) {\r\n      if (flag.createdBy === req.user.id) {\r\n        records.splice(records.indexOf(flag), 1);\r\n        return res.status(200).json({\r\n          status: 200,\r\n          data: {\r\n            id: flag.id,\r\n            message: \"red-flag record has been deleted\"\r\n          }\r\n        });\r\n      }\r\n      return res.status(400).json({\r\n        status: 400,\r\n        error: \"cannot delete record you did not create\"\r\n      });\r\n    }\r\n    return res.status(404).json({\r\n      status: 404,\r\n      error: \"No record found\"\r\n    });\r\n  }\r\n\r\n  static updateRedflaglocation(req, res) {\r\n    const id = parseInt(req.params.redflagid, 10);\r\n    const flag = records.find(rec => rec.id === id);\r\n    const userId = req.user.id;\r\n\r\n    if (flag) {\r\n      if (flag.createdBy === userId) {\r\n        const i = records.findIndex(el => el.id === flag.id);\r\n        records[i].location = req.body.location;\r\n        return res.status(200).json({\r\n          status: 200,\r\n          message: \"Updated red-flag recordâ€™s location\",\r\n          data: {\r\n            id: flag.id\r\n          }\r\n        });\r\n      }\r\n      return res.status(400).json({\r\n        status: 400,\r\n        message: \"cannot edit article you did not create\"\r\n      });\r\n    }\r\n    return res.status(404).json({\r\n      status: 404,\r\n      message: \"Article not found\"\r\n    });\r\n  }\r\n}\r\n\r\nexport default recordController;\r\n"],"file":"recordController.js"}